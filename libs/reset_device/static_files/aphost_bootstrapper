#!/bin/bash

# Stop NetworkManager to avoid conflicts
systemctl stop NetworkManager 2>/dev/null || true

# Ensure dhcpcd is running
systemctl enable dhcpcd 2>/dev/null || true
systemctl start dhcpcd 2>/dev/null || true

# Reset wlan0 interface
ip link set wlan0 down 2>/dev/null || true
sleep 1
ip link set wlan0 up 2>/dev/null || true
sleep 2

# Ensure wlan0 has static IP for AP mode
ifconfig wlan0 10.0.0.1 netmask 255.255.255.0 up

# Alternative method if ifconfig fails
if ! ifconfig wlan0 | grep "inet 10.0.0.1" > /dev/null 2>&1; then
    ip addr flush dev wlan0 2>/dev/null || true
    ip addr add 10.0.0.1/24 dev wlan0 2>/dev/null || true
    ip link set wlan0 up 2>/dev/null || true
fi

# Wait a moment for interface to be ready
sleep 3

# Unmask and prepare hostapd and dnsmasq services before starting them
systemctl unmask hostapd 2>/dev/null || true
systemctl unmask dnsmasq 2>/dev/null || true

# Ensure services are enabled for AP mode
systemctl enable hostapd 2>/dev/null || true
systemctl enable dnsmasq 2>/dev/null || true

# Stop any existing instances
systemctl stop hostapd 2>/dev/null || true
systemctl stop dnsmasq 2>/dev/null || true
pkill -f hostapd 2>/dev/null || true
pkill -f dnsmasq 2>/dev/null || true

# Give services time to stop
sleep 2

python3 /usr/lib/raspiwifi/reset_device/reset.py &

python3 /usr/lib/raspiwifi/configuration_app/app.py &

# Start dnsmasq service first
systemctl start dnsmasq 2>/dev/null || dnsmasq &

# Start hostapd service
systemctl start hostapd 2>/dev/null || hostapd -dd /etc/hostapd/hostapd.conf &
